package me.dkits;

import me.dkits.Warps.irLavaExtreme;
import me.dkits.Warps.irLavaDificil;
import me.dkits.Warps.irLavaMedio;
import me.dkits.Warps.irLavaFacil;
import me.dkits.Warps.irMlg;
import me.dkits.Warps.irKnock;
import me.dkits.Warps.irMain;
import me.dkits.Warps.irFPS;
import me.dkits.Warps.irSpawn;
import me.dkits.Utils.Ping;
import me.dkits.Utils.Skit;
import me.dkits.Utils.Atualiza\u00e7\u00f5es;
import me.dkits.Warps.SetSpawn;
import me.dkits.Warps.SetMain;
import me.dkits.Warps.SetMlg;
import me.dkits.Warps.SetKnock;
import me.dkits.Warps.SetFPS;
import me.dkits.Warps.SetLavaChallenger;
import me.dkits.Utils.TogglePvP;
import me.dkits.Kits.Deshfire;
import me.dkits.Kits.Camel;
import me.dkits.Kits.Paladino;
import me.dkits.Kits.Archer;
import me.dkits.Kits.PVP;
import me.dkits.Utils.Sopa;
import me.dkits.Utils.ClearInvAndChat;
import me.dkits.Utils.Fly;
import me.dkits.Utils.Head;
import me.dkits.Utils.Help;
import me.dkits.Utils.DiaNoite;
import me.dkits.Utils.RemoveKit;
import me.dkits.Utils.Suicide;
import me.dkits.Utils.Report;
import me.dkits.Utils.Broadcast;
import me.dkits.Utils.Alert;
import org.bukkit.command.CommandExecutor;
import org.bukkit.plugin.PluginManager;
import me.dkits.Kits.Grappler;
import me.dkits.Kits.Turbo;
import me.dkits.Kits.Sonic;
import me.dkits.Kits.Accumulator;
import me.dkits.Kits.Infected;
import me.dkits.Kits.Magma;
import me.dkits.Kits.Troll;
import me.dkits.Kits.Sayajin;
import me.dkits.Utils.Crash;
import me.dkits.Utils.killstreak;
import me.dkits.Utils.Prote\u00e7\u00e3o;
import me.dkits.Utils.CancelExplosion;
import me.dkits.Seletor.LojaKits;
import me.dkits.Utils.InvSee;
import me.dkits.Kits.Kyuubi;
import me.dkits.Kits.Clear;
import me.dkits.Kits.Scorpion;
import me.dkits.Kits.Hunter;
import me.dkits.Kits.Andromeda;
import me.dkits.Utils.mlgvoltar;
import me.dkits.Warps.mlg;
import me.dkits.Kits.Achilles;
import me.dkits.Kits.Neo;
import me.dkits.Kits.Launcher;
import me.dkits.Kits.WeakHand;
import me.dkits.Kits.DarkGod;
import me.dkits.Kits.Forcefield;
import me.dkits.Kits.Gladiator;
import me.dkits.Kits.Vacuum;
import me.dkits.Kits.Skeleton;
import me.dkits.Kits.Salamander;
import me.dkits.Kits.Monk;
import me.dkits.Kits.Resouper;
import me.dkits.Kits.Sumo;
import me.dkits.Kits.Frosty;
import me.dkits.Kits.Hulk;
import me.dkits.Kits.Milkman;
import me.dkits.Kits.Avatar;
import me.dkits.Kits.Reaper;
import me.dkits.Kits.Turtle;
import me.dkits.Kits.Viking;
import me.dkits.Kits.Barbarian;
import me.dkits.Kits.Confuser;
import me.dkits.Kits.Naruto;
import me.dkits.Kits.Poseidon;
import me.dkits.Kits.Snail;
import me.dkits.Kits.Stomper;
import me.dkits.Kits.Fisherman;
import me.dkits.Kits.Ninja;
import me.dkits.Kits.Critical;
import me.dkits.Utils.PlayerManager;
import me.dkits.Jumps.Redstone;
import me.dkits.Jumps.Esmeralda;
import me.dkits.Jumps.Ferro;
import me.dkits.Jumps.Diamante;
import me.dkits.Recompensas.BlocoExtreme;
import me.dkits.Recompensas.BlocoDificil;
import me.dkits.Recompensas.BlocoMedio;
import me.dkits.Recompensas.BlocoFacil;
import me.dkits.Utils.Build;
import me.dkits.Kits.Kangaroo;
import me.dkits.Kits.Grandpa;
import me.dkits.Kits.PulaPula;
import me.dkits.Kits.Ryu;
import me.dkits.Kits.Sniper;
import me.dkits.Kits.StoneMan;
import me.dkits.Kits.Switcher;
import me.dkits.Kits.Urgal;
import me.dkits.Kits.Viper;
import me.dkits.Kits.Wolverine;
import me.dkits.Kits.Fujao;
import me.dkits.Kits.Flash;
import me.dkits.Kits.Fireman;
import me.dkits.Kits.Anchor;
import me.dkits.Kits.Endermage;
import me.dkits.Kits.Morf;
import me.dkits.Kits.Doctor;
import me.dkits.Kits.Specialist;
import me.dkits.Kits.Bazooka;
import me.dkits.Utils.BarApiKit;
import me.dkits.Utils.Tag;
import me.dkits.Utils.Items;
import me.dkits.Seletor.WarpChallenger;
import me.dkits.Seletor.WarpsSelector;
import me.dkits.Seletor.WarpsComuns;
import me.dkits.Seletor.Kits2;
import me.dkits.Seletor.Kits;
import me.dkits.Player.QuitEvent;
import me.dkits.Player.DeathEvent;
import me.dkits.Player.JoinEvent;
import me.dkits.Utils.ServerJoinKick;
import me.dkits.Utils.Motd;
import me.dkits.Utils.ListenersUtils;
import org.bukkit.plugin.RegisteredServiceProvider;
import org.bukkit.Bukkit;
import me.dkits.Scoreboard.ScoreBoard;
import me.dkits.Files.Status;
import me.dkits.Files.Dinheiro;
import net.milkbowl.vault.permission.Permission;
import net.milkbowl.vault.economy.Economy;
import org.bukkit.plugin.Plugin;
import org.bukkit.inventory.Inventory;
import org.bukkit.event.Listener;
import org.bukkit.plugin.java.JavaPlugin;

public class Main extends JavaPlugin implements Listener
{
    public Inventory warps;
    public static Plugin plugin;
    public String shop;
    public static Economy econ;
    public static Permission perm;
    public Dinheiro dinheiro;
    public Status status;
    public static Permission permission;
    public static Economy economy;
    ScoreBoard sc;
    static Main instance;
    String keyV;
    String keyX;
    double protectionP;
    double protectionPL;
    double key;
    
    static {
        Main.econ = null;
        Main.perm = null;
        Main.permission = null;
        Main.economy = null;
    }
    
    public Main(final Main instance) {
        this.shop = "§e§oLoja de Kits Por Dinheiro";
        this.dinheiro = Dinheiro.instance;
        this.status = Status.instance;
        this.sc = new ScoreBoard();
        this.keyV = "WeDevilEdit §4ON!";
        this.keyX = "§fKey invalida! §4desligando...";
        this.protectionP = 104.122;
        this.protectionPL = this.protectionP;
        this.key = this.getConfig().getDouble("KEY");
        Main.plugin = (Plugin)instance;
    }
    
    public Main() {
        this.shop = "§e§oLoja de Kits Por Dinheiro";
        this.dinheiro = Dinheiro.instance;
        this.status = Status.instance;
        this.sc = new ScoreBoard();
        this.keyV = "WeDevilEdit §4ON!";
        this.keyX = "§fKey invalida! §4desligando...";
        this.protectionP = 104.122;
        this.protectionPL = this.protectionP;
        this.key = this.getConfig().getDouble("KEY");
        Main.instance = this;
    }
    
    public static Main instance() {
        return Main.instance;
    }
    
    public void onEnable() {
        Main.instance = this;
        Main.plugin = (Plugin)this;
        this.sc.setup(Main.plugin);
        this.loadListeners();
        this.loadCommands();
        final RegisteredServiceProvider economyProvider = this.getServer().getServicesManager().getRegistration((Class)Economy.class);
        if (economyProvider != null) {
            Main.econ = (Economy)economyProvider.getProvider();
            final RegisteredServiceProvider permissionprovider = this.getServer().getServicesManager().getRegistration((Class)Permission.class);
            if (permissionprovider != null) {
                Main.perm = (Permission)permissionprovider.getProvider();
            }
        }
        if (this.key == this.protectionPL) {
            Bukkit.getConsoleSender().sendMessage(this.keyV);
        }
        else {
            Bukkit.getConsoleSender().sendMessage(this.keyX);
            Bukkit.shutdown();
        }
        final RegisteredServiceProvider economyProvider2 = this.getServer().getServicesManager().getRegistration((Class)Economy.class);
        if (economyProvider2 != null) {
            Main.economy = (Economy)economyProvider2.getProvider();
        }
        final RegisteredServiceProvider permissionProvider = this.getServer().getServicesManager().getRegistration((Class)Permission.class);
        if (permissionProvider != null) {
            Main.permission = (Permission)permissionProvider.getProvider();
        }
        this.getConfig().addDefault("TipoItem", (Object)String.valueOf("FLOWER_POT"));
        this.getConfig().addDefault("NomeItem", (Object)String.valueOf("&aTurbo"));
        this.getConfig().addDefault("Tempo", (Object)20);
        this.getConfig().addDefault("Booost", (Object)3);
        this.getConfig().addDefault("Slow", (Object)6);
        this.getConfig().options().copyDefaults(true);
        this.getConfig().options().copyHeader(true);
        this.saveConfig();
        this.getConfig().addDefault("ItemType", (Object)String.valueOf("LAPIS_BLOCK"));
        this.getConfig().addDefault("ItemName", (Object)String.valueOf("&bSonic"));
        this.getConfig().addDefault("Time", (Object)10);
        this.getConfig().addDefault("Boost", (Object)6);
        this.getConfig().addDefault("Poison", (Object)6);
        this.getConfig().options().copyDefaults(true);
        this.getConfig().options().copyHeader(true);
        this.saveConfig();
        this.saveDefaultConfig();
    }
    
    public void loadListeners() {
        final PluginManager pm = Bukkit.getServer().getPluginManager();
        pm.registerEvents((Listener)this, (Plugin)this);
        pm.registerEvents((Listener)new ListenersUtils(this), (Plugin)this);
        pm.registerEvents((Listener)new Motd(this), (Plugin)this);
        pm.registerEvents((Listener)new ServerJoinKick(this), (Plugin)this);
        pm.registerEvents((Listener)new JoinEvent(this), (Plugin)this);
        pm.registerEvents((Listener)new DeathEvent(this), (Plugin)this);
        pm.registerEvents((Listener)new QuitEvent(this), (Plugin)this);
        pm.registerEvents((Listener)new ScoreBoard(), (Plugin)this);
        pm.registerEvents((Listener)new Kits(), (Plugin)this);
        pm.registerEvents((Listener)new Kits2(), (Plugin)this);
        pm.registerEvents((Listener)new WarpsComuns(), (Plugin)this);
        pm.registerEvents((Listener)new WarpsSelector(), (Plugin)this);
        pm.registerEvents((Listener)new WarpChallenger(), (Plugin)this);
        pm.registerEvents((Listener)new Items(), (Plugin)this);
        pm.registerEvents((Listener)new Tag(), (Plugin)this);
        pm.registerEvents((Listener)new BarApiKit(), (Plugin)this);
        pm.registerEvents((Listener)new Bazooka(this), (Plugin)this);
        pm.registerEvents((Listener)new Specialist(), (Plugin)this);
        pm.registerEvents((Listener)new Doctor(), (Plugin)this);
        pm.registerEvents((Listener)new Morf(), (Plugin)this);
        pm.registerEvents((Listener)new Endermage(this), (Plugin)this);
        pm.registerEvents((Listener)new Anchor(this), (Plugin)this);
        pm.registerEvents((Listener)new Fireman(this), (Plugin)this);
        pm.registerEvents((Listener)new Flash(), (Plugin)this);
        pm.registerEvents((Listener)new Fujao(), (Plugin)this);
        pm.registerEvents((Listener)new Wolverine(this), (Plugin)this);
        pm.registerEvents((Listener)new Viper(this), (Plugin)this);
        pm.registerEvents((Listener)new Urgal(this), (Plugin)this);
        pm.registerEvents((Listener)new Switcher(this), (Plugin)this);
        pm.registerEvents((Listener)new StoneMan(this), (Plugin)this);
        pm.registerEvents((Listener)new Sniper(this), (Plugin)this);
        pm.registerEvents((Listener)new Ryu(this), (Plugin)this);
        pm.registerEvents((Listener)new PulaPula(), (Plugin)this);
        pm.registerEvents((Listener)new Grandpa(), (Plugin)this);
        pm.registerEvents((Listener)new Kangaroo(), (Plugin)this);
        pm.registerEvents((Listener)new Endermage(this), (Plugin)this);
        pm.registerEvents((Listener)new Build(), (Plugin)this);
        pm.registerEvents((Listener)new BlocoFacil(), (Plugin)this);
        pm.registerEvents((Listener)new BlocoMedio(), (Plugin)this);
        pm.registerEvents((Listener)new BlocoDificil(), (Plugin)this);
        pm.registerEvents((Listener)new BlocoExtreme(), (Plugin)this);
        pm.registerEvents((Listener)new Diamante(this), (Plugin)this);
        pm.registerEvents((Listener)new Ferro(this), (Plugin)this);
        pm.registerEvents((Listener)new Esmeralda(this), (Plugin)this);
        pm.registerEvents((Listener)new Redstone(this), (Plugin)this);
        pm.registerEvents((Listener)new PlayerManager(this), (Plugin)this);
        pm.registerEvents((Listener)new Critical(this), (Plugin)this);
        pm.registerEvents((Listener)new Ninja(this), (Plugin)this);
        pm.registerEvents((Listener)new Fisherman(this), (Plugin)this);
        pm.registerEvents((Listener)new Stomper(this), (Plugin)this);
        pm.registerEvents((Listener)new Snail(this), (Plugin)this);
        pm.registerEvents((Listener)new Poseidon(this), (Plugin)this);
        pm.registerEvents((Listener)new Naruto(this), (Plugin)this);
        pm.registerEvents((Listener)new Confuser(this), (Plugin)this);
        pm.registerEvents((Listener)new Barbarian(this), (Plugin)this);
        pm.registerEvents((Listener)new Viking(this), (Plugin)this);
        pm.registerEvents((Listener)new Turtle(this), (Plugin)this);
        pm.registerEvents((Listener)new Reaper(this), (Plugin)this);
        pm.registerEvents((Listener)new Avatar(this), (Plugin)this);
        pm.registerEvents((Listener)new Milkman(this), (Plugin)this);
        pm.registerEvents((Listener)new Hulk(this), (Plugin)this);
        pm.registerEvents((Listener)new Frosty(this), (Plugin)this);
        pm.registerEvents((Listener)new Sumo(this), (Plugin)this);
        pm.registerEvents((Listener)new Resouper(this), (Plugin)this);
        pm.registerEvents((Listener)new Monk(this), (Plugin)this);
        pm.registerEvents((Listener)new Salamander(this), (Plugin)this);
        pm.registerEvents((Listener)new Skeleton(this), (Plugin)this);
        pm.registerEvents((Listener)new Vacuum(this), (Plugin)this);
        pm.registerEvents((Listener)new Gladiator(this), (Plugin)this);
        pm.registerEvents((Listener)new Forcefield(), (Plugin)this);
        pm.registerEvents((Listener)new DarkGod(this), (Plugin)this);
        pm.registerEvents((Listener)new WeakHand(this), (Plugin)this);
        pm.registerEvents((Listener)new Launcher(this), (Plugin)this);
        pm.registerEvents((Listener)new Neo(), (Plugin)this);
        pm.registerEvents((Listener)new Achilles(this), (Plugin)this);
        pm.registerEvents((Listener)new mlg(this), (Plugin)this);
        pm.registerEvents((Listener)new mlgvoltar(this), (Plugin)this);
        pm.registerEvents((Listener)new Andromeda(this), (Plugin)this);
        pm.registerEvents((Listener)new Hunter(this), (Plugin)this);
        pm.registerEvents((Listener)new Scorpion(this), (Plugin)this);
        pm.registerEvents((Listener)new Clear(this), (Plugin)this);
        pm.registerEvents((Listener)new Kyuubi(this), (Plugin)this);
        pm.registerEvents((Listener)new InvSee(), (Plugin)this);
        pm.registerEvents((Listener)new LojaKits(), (Plugin)this);
        pm.registerEvents((Listener)new CancelExplosion(this), (Plugin)this);
        pm.registerEvents((Listener)new Prote\u00e7\u00e3o(), (Plugin)this);
        pm.registerEvents((Listener)new killstreak(), (Plugin)this);
        pm.registerEvents((Listener)new Crash(this), (Plugin)this);
        pm.registerEvents((Listener)new Sayajin(this), (Plugin)this);
        pm.registerEvents((Listener)new Troll(this), (Plugin)this);
        pm.registerEvents((Listener)new Magma(this), (Plugin)this);
        pm.registerEvents((Listener)new Infected(this), (Plugin)this);
        pm.registerEvents((Listener)new Accumulator(this), (Plugin)this);
        pm.registerEvents((Listener)new Sonic(), (Plugin)this);
        pm.registerEvents((Listener)new Turbo(), (Plugin)this);
        pm.registerEvents((Listener)new Grappler(this), (Plugin)this);
    }
    
    public void loadCommands() {
        this.getCommand("build").setExecutor((CommandExecutor)new Build());
        this.getCommand("kit").setExecutor((CommandExecutor)new Kits());
        this.getCommand("kits").setExecutor((CommandExecutor)new Kits());
        this.getCommand("warps").setExecutor((CommandExecutor)new WarpsSelector());
        this.getCommand("warp").setExecutor((CommandExecutor)new WarpsSelector());
        this.getCommand("alert").setExecutor((CommandExecutor)new Alert());
        this.getCommand("tag").setExecutor((CommandExecutor)new Tag());
        this.getCommand("bc").setExecutor((CommandExecutor)new Broadcast());
        this.getCommand("broadcast").setExecutor((CommandExecutor)new Broadcast());
        this.getCommand("report").setExecutor((CommandExecutor)new Report());
        this.getCommand("suicide").setExecutor((CommandExecutor)new Suicide());
        this.getCommand("resetkit").setExecutor((CommandExecutor)new RemoveKit());
        this.getCommand("dia").setExecutor((CommandExecutor)new DiaNoite());
        this.getCommand("noite").setExecutor((CommandExecutor)new DiaNoite());
        this.getCommand("dkits").setExecutor((CommandExecutor)new Help());
        this.getCommand("head").setExecutor((CommandExecutor)new Head(this));
        this.getCommand("fly").setExecutor((CommandExecutor)new Fly());
        this.getCommand("clear").setExecutor((CommandExecutor)new ClearInvAndChat());
        this.getCommand("npcsopa").setExecutor((CommandExecutor)new Sopa());
        this.getCommand("shop").setExecutor((CommandExecutor)new LojaKits());
        this.getCommand("endermage").setExecutor((CommandExecutor)new Endermage(this));
        this.getCommand("bazooka").setExecutor((CommandExecutor)new Bazooka(this));
        this.getCommand("doctor").setExecutor((CommandExecutor)new Doctor());
        this.getCommand("pvp").setExecutor((CommandExecutor)new PVP());
        this.getCommand("kangaroo").setExecutor((CommandExecutor)new Kangaroo());
        this.getCommand("grandpa").setExecutor((CommandExecutor)new Grandpa());
        this.getCommand("fujao").setExecutor((CommandExecutor)new Fujao());
        this.getCommand("morf").setExecutor((CommandExecutor)new Morf());
        this.getCommand("anchor").setExecutor((CommandExecutor)new Anchor(this));
        this.getCommand("archer").setExecutor((CommandExecutor)new Archer());
        this.getCommand("specialist").setExecutor((CommandExecutor)new Specialist());
        this.getCommand("flash").setExecutor((CommandExecutor)new Flash());
        this.getCommand("ryu").setExecutor((CommandExecutor)new Ryu(this));
        this.getCommand("viper").setExecutor((CommandExecutor)new Viper(this));
        this.getCommand("urgal").setExecutor((CommandExecutor)new Urgal(this));
        this.getCommand("switcher").setExecutor((CommandExecutor)new Switcher(this));
        this.getCommand("stoneman").setExecutor((CommandExecutor)new StoneMan(this));
        this.getCommand("sniper").setExecutor((CommandExecutor)new Sniper(this));
        this.getCommand("paladino").setExecutor((CommandExecutor)new Paladino());
        this.getCommand("fireman").setExecutor((CommandExecutor)new Fireman(this));
        this.getCommand("critical").setExecutor((CommandExecutor)new Critical(this));
        this.getCommand("ninja").setExecutor((CommandExecutor)new Ninja(this));
        this.getCommand("fisherman").setExecutor((CommandExecutor)new Fisherman(this));
        this.getCommand("snail").setExecutor((CommandExecutor)new Snail(this));
        this.getCommand("stomper").setExecutor((CommandExecutor)new Stomper(this));
        this.getCommand("pulapula").setExecutor((CommandExecutor)new PulaPula());
        this.getCommand("wolverine").setExecutor((CommandExecutor)new Wolverine(this));
        this.getCommand("confuser").setExecutor((CommandExecutor)new Confuser(this));
        this.getCommand("naruto").setExecutor((CommandExecutor)new Naruto(this));
        this.getCommand("poseidon").setExecutor((CommandExecutor)new Poseidon(this));
        this.getCommand("barbarian").setExecutor((CommandExecutor)new Barbarian(this));
        this.getCommand("viking").setExecutor((CommandExecutor)new Viking(this));
        this.getCommand("turtle").setExecutor((CommandExecutor)new Turtle(this));
        this.getCommand("reaper").setExecutor((CommandExecutor)new Reaper(this));
        this.getCommand("forcefield").setExecutor((CommandExecutor)new Forcefield());
        this.getCommand("avatar").setExecutor((CommandExecutor)new Avatar(this));
        this.getCommand("milkman").setExecutor((CommandExecutor)new Milkman(this));
        this.getCommand("hulk").setExecutor((CommandExecutor)new Hulk(this));
        this.getCommand("frosty").setExecutor((CommandExecutor)new Frosty(this));
        this.getCommand("sumo").setExecutor((CommandExecutor)new Sumo(this));
        this.getCommand("resouper").setExecutor((CommandExecutor)new Resouper(this));
        this.getCommand("salamander").setExecutor((CommandExecutor)new Salamander(this));
        this.getCommand("skeleton").setExecutor((CommandExecutor)new Skeleton(this));
        this.getCommand("vacuum").setExecutor((CommandExecutor)new Vacuum(this));
        this.getCommand("gladiator").setExecutor((CommandExecutor)new Gladiator(this));
        this.getCommand("camel").setExecutor((CommandExecutor)new Camel(this));
        this.getCommand("weakhand").setExecutor((CommandExecutor)new WeakHand(this));
        this.getCommand("darkgod").setExecutor((CommandExecutor)new DarkGod(this));
        this.getCommand("launcher").setExecutor((CommandExecutor)new Launcher(this));
        this.getCommand("neo").setExecutor((CommandExecutor)new Neo());
        this.getCommand("monk").setExecutor((CommandExecutor)new Monk(this));
        this.getCommand("achilles").setExecutor((CommandExecutor)new Achilles(this));
        this.getCommand("andromeda").setExecutor((CommandExecutor)new Andromeda(this));
        this.getCommand("hunter").setExecutor((CommandExecutor)new Hunter(this));
        this.getCommand("scorpion").setExecutor((CommandExecutor)new Scorpion(this));
        this.getCommand("clear").setExecutor((CommandExecutor)new Clear(this));
        this.getCommand("kyuubi").setExecutor((CommandExecutor)new Kyuubi(this));
        this.getCommand("sayajin").setExecutor((CommandExecutor)new Sayajin(this));
        this.getCommand("magma").setExecutor((CommandExecutor)new Magma(this));
        this.getCommand("infected").setExecutor((CommandExecutor)new Infected(this));
        this.getCommand("accumulator").setExecutor((CommandExecutor)new Accumulator(this));
        this.getCommand("deshfire").setExecutor((CommandExecutor)new Deshfire(this));
        this.getCommand("sonic").setExecutor((CommandExecutor)new Sonic());
        this.getCommand("turbo").setExecutor((CommandExecutor)new Turbo());
        this.getCommand("grappler").setExecutor((CommandExecutor)new Grappler(this));
        this.getCommand("togglepvp").setExecutor((CommandExecutor)new TogglePvP());
        this.getCommand("setchallenge").setExecutor((CommandExecutor)new SetLavaChallenger(this));
        this.getCommand("setfps").setExecutor((CommandExecutor)new SetFPS(this));
        this.getCommand("setknock").setExecutor((CommandExecutor)new SetKnock(this));
        this.getCommand("setmlg").setExecutor((CommandExecutor)new SetMlg(this));
        this.getCommand("setmain").setExecutor((CommandExecutor)new SetMain(this));
        this.getCommand("setspawn").setExecutor((CommandExecutor)new SetSpawn(this));
        this.getCommand("invsee").setExecutor((CommandExecutor)new InvSee());
        this.getCommand("att").setExecutor((CommandExecutor)new Atualiza\u00e7\u00f5es());
        this.getCommand("skit").setExecutor((CommandExecutor)new Skit());
        this.getCommand("lag").setExecutor((CommandExecutor)new Ping());
        this.getCommand("spawn").setExecutor((CommandExecutor)new irSpawn(this));
        this.getCommand("fps").setExecutor((CommandExecutor)new irFPS(this));
        this.getCommand("main").setExecutor((CommandExecutor)new irMain(this));
        this.getCommand("knock").setExecutor((CommandExecutor)new irKnock(this));
        this.getCommand("mlg").setExecutor((CommandExecutor)new irMlg(this));
        this.getCommand("challenge").setExecutor((CommandExecutor)new irLavaFacil(this));
        this.getCommand("lmedio").setExecutor((CommandExecutor)new irLavaMedio(this));
        this.getCommand("ldificil").setExecutor((CommandExecutor)new irLavaDificil(this));
        this.getCommand("lextreme").setExecutor((CommandExecutor)new irLavaExtreme(this));
    }
    
    public static Plugin getPlugin() {
        return Bukkit.getServer().getPluginManager().getPlugin("DKits");
    }
}
